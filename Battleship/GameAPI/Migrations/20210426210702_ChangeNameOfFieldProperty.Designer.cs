// <auto-generated />
using System.Collections.Generic;
using GameAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GameAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210426210702_ChangeNameOfFieldProperty")]
    partial class ChangeNameOfFieldProperty
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("GameAPI.Models.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<List<int>>("HitsList")
                        .HasColumnType("integer[]");

                    b.Property<int>("Message")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<List<int>>("ShipNearFields")
                        .HasColumnType("integer[]");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("GameAPI.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BoardId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsHit")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("integer");

                    b.Property<int>("RowName")
                        .HasColumnType("integer");

                    b.Property<int>("ShipId")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("GameAPI.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("GameAPI.Models.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("NearFieldValuesName")
                        .HasColumnType("integer");

                    b.Property<string>("Orientation")
                        .HasColumnType("text");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("ShipNameFieldValues")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Ships");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ship");
                });

            modelBuilder.Entity("GameAPI.Models.Ships.Battleship", b =>
                {
                    b.HasBaseType("GameAPI.Models.Ship");

                    b.HasDiscriminator().HasValue("Battleship");
                });

            modelBuilder.Entity("GameAPI.Models.Ships.Carrier", b =>
                {
                    b.HasBaseType("GameAPI.Models.Ship");

                    b.HasDiscriminator().HasValue("Carrier");
                });

            modelBuilder.Entity("GameAPI.Models.Ships.Cruiser", b =>
                {
                    b.HasBaseType("GameAPI.Models.Ship");

                    b.HasDiscriminator().HasValue("Cruiser");
                });

            modelBuilder.Entity("GameAPI.Models.Ships.Destroyer", b =>
                {
                    b.HasBaseType("GameAPI.Models.Ship");

                    b.HasDiscriminator().HasValue("Destroyer");
                });

            modelBuilder.Entity("GameAPI.Models.Ships.PatrolBoat", b =>
                {
                    b.HasBaseType("GameAPI.Models.Ship");

                    b.HasDiscriminator().HasValue("PatrolBoat");
                });

            modelBuilder.Entity("GameAPI.Models.Ships.Submarine", b =>
                {
                    b.HasBaseType("GameAPI.Models.Ship");

                    b.HasDiscriminator().HasValue("Submarine");
                });

            modelBuilder.Entity("GameAPI.Models.Ships.TacticalBoat", b =>
                {
                    b.HasBaseType("GameAPI.Models.Ship");

                    b.HasDiscriminator().HasValue("TacticalBoat");
                });

            modelBuilder.Entity("GameAPI.Models.Board", b =>
                {
                    b.HasOne("GameAPI.Models.Player", "Player")
                        .WithOne("Board")
                        .HasForeignKey("GameAPI.Models.Board", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameAPI.Models.Field", b =>
                {
                    b.HasOne("GameAPI.Models.Board", "Board")
                        .WithMany("Fields")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("GameAPI.Models.Ship", b =>
                {
                    b.HasOne("GameAPI.Models.Player", "Player")
                        .WithMany("Ships")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameAPI.Models.Board", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("GameAPI.Models.Player", b =>
                {
                    b.Navigation("Board");

                    b.Navigation("Ships");
                });
#pragma warning restore 612, 618
        }
    }
}
